#Translated from the zh-CN.yml using google translate and Kelly Mahan

"en-us":
  login: Login
  register: Register
  how_to_register: How to Register
  logout: Logout
  
  
  

  
  date:
    formats:
      default: "% Y-% m-% d"
      short: "% b% d days"
      long: "% Y% b% d day of"
    day_names: [Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday]
    abbr_day_names: [Sun, Mon, Tue, Wed, Thu, Fri, Sat]
    month_names: [~, January, February, March, April, May, June, July, August, September, October, November, December]
    abbr_month_names: [~, Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sept, Oct, Nov, Dec]
    order: [:year, :month, :day]
  
  time:
    formats:
      default: "% Y% b% d day of% A% H:% M:% S% Z"
      short: "% b% d at% H:% M"
      long: "% Y% b% d day of% H:% M"
      min: "% H:% M"
    am: "am"
    pm: "pm"
  
  datetime:
    distance_in_words:
      half_a_minute: "half a minute"
      less_than_x_seconds:
        one: "less than one second"
        other: "Less than %{count} seconds"
      x_seconds:
        one: "one second"
        other: " %{count} seconds"
      less_than_x_minutes:
        one: "less than a minute"
        other: "Less than %{count} minutes"
      x_minutes:
        one: "One Minute"
        other: " %{count} minutes"
      about_x_hours:
        one: "About an hour"
        other: "about %{count} hours"
      x_days:
        one: "one day"
        other: " %{count} days"
      about_x_months:
        one: "About a month"
        other: "about %{count} months"
      x_months:
        one: "one month"
        other: " %{count} months"
      about_x_years:
        one: "About a year"
        other: "In about %{count}"
      over_x_years:
        one: "one year"
        other: " %{count} years"
      almost_x_years:
        one: "for nearly a year"
        other: "In close to %{count}"
    prompts:
      year: "Year"
      month: "Month"
      day: "Day"
      hour: "Hour"
      minute: "Minutes"
      second: "Seconds"
  
  number:
    format:
      separator: "."
      delimiter: ","
      precision: 3
    currency:
      format:
        format: "% u% n"
        unit: "CN Â¥"
        separator: "."
        delimiter: ","
        precision: 2
    percentage:
      format:
        delimiter: ""
    precision:
      format:
        delimiter: ""
    human:
      format:
        delimiter: ""
        precision: 1
      storage_units:
        format: "% n% u"
        units:
          byte:
            one: "Byte"
            other: "Bytes"
          kb: "KB"
          mb: "MB"
          gb: "GB"
          tb: "TB"
  
  support:
    array:
      words_connector: ","
      two_words_connector: "and"
      last_word_connector: ", and"
    select:
      prompt: "Select"
  
  activemodel:
    errors:
      template: # ~ 2.3.5 backward compatible
        header:
          one: "there is an error, %{model} can not be saved. "
          other: "there are %{count} errors, %{model} can not be saved. "
        body: "the following fields are invalid:"
      messages:
        inclusion: "is not included in the list"
        exclusion: "is a reserved keyword"
        invalid: "is invalid"
        confirmation: "and confirm the value does not match"
        accepted: "must be accepted"
        empty: "can not be empty"
        blank: "can not be null"
        too_long: "is too long (up to %{count} characters)"
        too_short: "is too short (minimum is %{count} characters)"
        wrong_length: "Illegal length (must be a %{count} characters)"
        taken: "has been used"
        not_a_number: "is not a number"
        not_an_integer: "must be an integer"
        greater_than: "must be greater than %{count}"
        greater_than_or_equal_to: "must be greater than or equal to %{count}"
        equal_to: "must be equal to %{count}"
        less_than: "must be less than %{count}"
        less_than_or_equal_to: "must be less than or equal to %{count}"
        odd: "must be singular"
        even: "must be a two-number"
        record_invalid: "validation failed: %{errors}"
    models:
      user: "Users"
      topic: "Topics"
      ask: "Issues"
      answer: "Answers"
    attributes:
      user:
        name: "name"
        slug: "personal url slug"
        email: "Email"
        bio: "Bio"
        password: "password"
        password_confirmation: "Confirm password"
        website: "Your Website"
        avatar: "Avatar"
        last_logined_at: "Last Login Time"
        tagline: "signature"
      topic:
        title: "Title"
      ask:
        title: "Title"
  
  activemodel:
    errors:
      template:
        header:
          one: "there is an error occurs that causes %{model} can not be saved. "
          other: "there are %{count} error occurs that causes %{model} can not be saved. "
        body: "the following fields appear in the error:"
          
  mongoid:
    errors:
      models:
        user: User
      messages:
        inclusion: "is not included in the list"
        exclusion: "is reserved keyword"
        invalid: "is invalid"
        confirmation: "and confirm the value does not match"
        accepted: "must be accepted"
        empty: "can not be empty"
        blank: "can not be null"
        too_long: "too long (up to %{count} characters)"
        too_short: "is too short (minimum is %{count} characters)"
        wrong_length: "Illegal length (must be a %{count} characters)"
        taken: "has been used"
        not_a_number: "not a number"
        not_an_integer: "must be an integer"
        greater_than: "must be greater than %{count}"
        greater_than_or_equal_to: "must be greater than or equal to %{count}"
        equal_to: "must be equal to %{count}"
        less_than: "must be less than %{count}"
        less_than_or_equal_to: "must be less than or equal to %{count}"
        odd: "must be odd"
        even: "must be even"
        record_invalid: "validation failed: %{errors}"
        document_not_found:
          "Found no class is %{klass} ID is the document %{identifiers}"
        invalid_database:
          "Database should be Mongo::DB, rather than %{name}."
        invalid_type:
          "In the class %{klass} is defined in a field, the actual value is %{value} of %{other}."
        unsupported_version:
          "MongoDB %{version} version has expired, please upgrade to %{mongo_version}."
        validations:
          "Validation failed - %{errors}."
        invalid_collection:
          "Does not allow direct access to the embedded set %{klass}, root access from the document collection."
        invalid_field:
          "Field name does not allow for %{name}. You should not define the internal property or method with Mongoid the same name, see detailed Use Document # instance_methods."
        too_many_nested_attribute_records:
          "Was associated with %{association} embedded property can not exceed %{limit}."
        embedded_in_must_have_inverse_of:
          "embedded_in association property must contain inverse_of."
        dependent_only_references_one_or_many:
          "dependent => destroy | delete option is only valid when the references_one or references_many."
        association_cant_have_inverse_of:
          "In the current association does not allow to define inverse_of, the only embedded_in or references_many an array of circumstances under"
        unsaved_document:
          "You cannot call create or create! Through a relational association
          relation ( %{document}) who's parent ( %{base}) is not already saved."